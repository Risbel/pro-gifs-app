{"version":3,"file":"static/js/543.8752d1ee.chunk.js","mappings":"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","sources":["components/AddCategory.js","config/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFethGifs.jsx","pages/GifExpertApp.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories, setParams, category }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputValue = (e) => {\r\n    return setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((prevCats) => [inputValue, ...prevCats]);\r\n      setParams({\r\n        q: [...category, inputValue],\r\n      });\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex my-4 items-center\">\r\n      <input\r\n        className=\"pl-2 pr-8 rounded-md\"\r\n        placeholder=\"Add category\"\r\n        onChange={handleInputValue}\r\n        value={inputValue}\r\n      />\r\n      <button className=\"\" type=\"submit\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth={1.5}\r\n          stroke=\"currentColor\"\r\n          className=\"absolute -translate-x-7 -translate-y-3 w-6 h-6 hover:h-7 hover:w-7 hover:stroke-2\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const api_key = \"AhtPMEYCwdPXIbGr75J140h1QDNtvnVg\";\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}}&limit=12&api_key=${api_key}`;\r\n\r\n  const resp = await fetch(url);\r\n\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"grid content-between border bg-gradient-to-b from-violet-900 to-transparent border-slate-600 bg-origin-content rounded-xl overflow-hidden h-full w-full\">\r\n      <img className=\"object-contain max-h-32 w-full\" src={url} alt={title} />\r\n      <div className=\"max-h-6 lg:max-h-8 text-center px-2\">\r\n        <p className=\" text-slate-100 py-2 text-xs lg:text-sm text-ellipsis\">{title}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFethGifs } from \"../hooks/useFethGifs\";\r\n\r\nimport { CircularProgress } from \"@mui/material\";\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFethGifs(category);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-slate-100 text-center py-4\">{category}</h1>\r\n\r\n      {loading && (\r\n        <div className=\"flex justify-center\">\r\n          <CircularProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 px-8\">\r\n        {images.map((img) => (\r\n          <div key={img.id} className=\"animate__animated animate__fadeIn\">\r\n            <GifGridItem {...img} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../config/getGifs\";\r\n\r\nexport const useFethGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"../components/AddCategory\";\r\nimport { GifGrid } from \"../components/GifGrid\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [params, setParams] = useSearchParams();\r\n\r\n  const paramethers = params.getAll(\"q\");\r\n\r\n  const [category, setCategories] = useState(paramethers);\r\n\r\n  //----------------------------handlersClicks--------------\r\n\r\n  const reset = () => {\r\n    return setCategories([]);\r\n  };\r\n\r\n  const last = category.length - 1;\r\n\r\n  const deletLastCat = () => {\r\n    return setCategories(category.splice(0, last));\r\n  };\r\n\r\n  const deleteFirsCAt = () => {\r\n    return setCategories(category.splice(1, last));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"flex justify-center text-slate-100 text-md md:text-2xl pt-16\">GiftExpertApp</h2>\r\n      <div className=\"flex flex-col items-center px-2 md:px-8 text-slate-700 text-sm md:text-xl\">\r\n        <AddCategory setCategories={setCategories} setParams={setParams} category={category} />\r\n        <div className=\"flex gap-2 text-[12px] md:text-xl\">\r\n          <button className=\"px-2 hover:bg-red-600 hover:text-white  rounded-md bg-gray-300\" onClick={deleteFirsCAt}>\r\n            Delete firs category\r\n          </button>\r\n          <button className=\"px-2 hover:bg-red-600 hover:text-white rounded-md bg-gray-300\" onClick={reset}>\r\n            Reset\r\n          </button>\r\n          <button className=\"px-2 hover:bg-red-600 hover:text-white  rounded-md bg-gray-300\" onClick={deletLastCat}>\r\n            Delete last category\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {category.map((cat) => {\r\n        return <GifGrid category={cat} key={cat} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n"],"names":["AddCategory","setCategories","setParams","category","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevCats","q","className","placeholder","onChange","target","value","type","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","getGifs","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFethGifs","CircularProgress","color","useSearchParams","params","paramethers","getAll","last","onClick","splice","cat"],"sourceRoot":""}